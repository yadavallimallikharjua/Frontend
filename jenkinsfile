pipeline {
    agent { label 'malli' }
    triggers {
        cron('H * * * *')
    }
    stages {
        stage('Source Code') {
            steps {
                git url: 'https://github.com/yadavallimallikharjua/spring-petclinic.git', 
                branch: 'declarative'
            }
            
        }
        stage('Artifactory-Configuration') {
            steps {
                rtMavenDeployer (
                    id: 'spc-deployer',
                    serverId: 'JFROG_IN',
                    releaseRepo: 'releaseRepo',
                    snapshotRepo: 'snapshotRepo',
                    
                )
            }
        }
        stage('Build the Code and sonarqube-analysis') {
            steps {
                rtMavenRun (
                    // Tool name from Jenkins configuration.
                    tool: 'MVN_DEFAULT',
                    pom: 'pom.xml',
                    goals: 'clean install',
                    // Maven options.
                    deployerId: 'spc-deployer',
                )
                
            }
        }
        stage('reporting') {
            steps {
                junit testResults: 'target/surefire-reports/*.xml'
            }
        }   
    }
}
